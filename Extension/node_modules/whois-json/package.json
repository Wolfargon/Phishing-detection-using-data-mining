{
  "_from": "whois-json",
  "_id": "whois-json@1.2.2",
  "_inBundle": false,
  "_integrity": "sha1-MHjn+xfB4URZX+D4P/muStDXDMQ=",
  "_location": "/whois-json",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "whois-json",
    "fetchSpec": "latest",
    "name": "whois-json",
    "raw": "whois-json",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/whois-json/-/whois-json-1.2.2.tgz",
  "_shasum": "3078e7fb17c1e144595fe0f83ff9ae4ad0d70cc4",
  "_shrinkwrap": {
    "dependencies": {
      "change-case": {
        "dependencies": {
          "camel-case": {
            "from": "camel-case@>=1.1.1 <2.0.0",
            "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "constant-case": {
            "from": "constant-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/constant-case/-/constant-case-1.1.0.tgz",
            "version": "1.1.0"
          },
          "dot-case": {
            "from": "dot-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/dot-case/-/dot-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "is-lower-case": {
            "from": "is-lower-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/is-lower-case/-/is-lower-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "is-upper-case": {
            "from": "is-upper-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/is-upper-case/-/is-upper-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "lower-case": {
            "from": "lower-case@>=1.1.1 <2.0.0",
            "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-1.1.2.tgz",
            "version": "1.1.2"
          },
          "lower-case-first": {
            "from": "lower-case-first@>=1.0.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/lower-case-first/-/lower-case-first-1.0.0.tgz",
            "version": "1.0.0"
          },
          "param-case": {
            "from": "param-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/param-case/-/param-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "pascal-case": {
            "from": "pascal-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/pascal-case/-/pascal-case-1.1.0.tgz",
            "version": "1.1.0"
          },
          "path-case": {
            "from": "path-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/path-case/-/path-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "sentence-case": {
            "from": "sentence-case@>=1.1.1 <2.0.0",
            "resolved": "https://registry.npmjs.org/sentence-case/-/sentence-case-1.1.2.tgz",
            "version": "1.1.2"
          },
          "snake-case": {
            "from": "snake-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/snake-case/-/snake-case-1.1.1.tgz",
            "version": "1.1.1"
          },
          "swap-case": {
            "from": "swap-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/swap-case/-/swap-case-1.1.0.tgz",
            "version": "1.1.0"
          },
          "title-case": {
            "from": "title-case@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/title-case/-/title-case-1.1.0.tgz",
            "version": "1.1.0"
          },
          "upper-case": {
            "from": "upper-case@>=1.1.1 <2.0.0",
            "resolved": "https://registry.npmjs.org/upper-case/-/upper-case-1.1.2.tgz",
            "version": "1.1.2"
          },
          "upper-case-first": {
            "from": "upper-case-first@>=1.1.0 <2.0.0",
            "resolved": "https://registry.npmjs.org/upper-case-first/-/upper-case-first-1.1.1.tgz",
            "version": "1.1.1"
          }
        },
        "from": "https://registry.npmjs.org/change-case/-/change-case-2.3.0.tgz",
        "resolved": "https://registry.npmjs.org/change-case/-/change-case-2.3.0.tgz",
        "version": "2.3.0"
      },
      "node-whois": {
        "dependencies": {
          "optimist": {
            "dependencies": {
              "minimist": {
                "from": "minimist@>=0.0.1 <0.1.0",
                "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",
                "version": "0.0.10"
              },
              "wordwrap": {
                "from": "wordwrap@>=0.0.2 <0.1.0",
                "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",
                "version": "0.0.2"
              }
            },
            "from": "optimist@>=0.6.1 <0.7.0",
            "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
            "version": "0.6.1"
          },
          "underscore": {
            "from": "underscore@>=1.5.2 <1.6.0",
            "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.5.2.tgz",
            "version": "1.5.2"
          }
        },
        "from": "node-whois@*",
        "resolved": "https://registry.npmjs.org/node-whois/-/node-whois-2.1.0.tgz",
        "version": "2.1.0"
      }
    },
    "name": "whois-json",
    "version": "2.0.0"
  },
  "_spec": "whois-json",
  "_where": "E:\\Extension",
  "author": {
    "email": "mike.maccana@gmail.com",
    "name": "Mike MacCana"
  },
  "bugs": {
    "url": "https://github.com/mikemaccana/whois-json/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "change-case": "https://registry.npmjs.org/change-case/-/change-case-2.3.0.tgz",
    "node-whois": "^2.1.0"
  },
  "deprecated": false,
  "description": "whois, with actual JavaScript (not flat string) results!",
  "devDependencies": {
    "mocha": "^3.2.0"
  },
  "homepage": "https://github.com/mikemaccana/whois-json#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "whois-json",
  "optionalDependencies": {},
  "readme": "A wrapper for the excellent `node-whois`, that returns results in actual, structured, camelCase-keyed JavaScript.\n\n[![CircleCI](https://circleci.com/gh/mikemaccana/whois-json.svg?style=shield)](https://circleci.com/gh/mikemaccana/whois-json)\n\n# Demo\n\n\tvar whois = require('./index.js');\n\n\twhois('google.com', function(err, result){\n\t\tconsole.log(JSON.stringify(result, null, 2))\n\t})\n\nReturns the following results. Note duplicate keys in whois results (like `nameServer`) are combined into a single result, seperated by space:\n\n\t{\n\t\t\"domainName\": \"google.com\",\n\t\t\"registryDomainId\": \"2138514_DOMAIN_COM-VRSN\",\n\t\t\"registrarWhoisServer\": \"whois.markmonitor.com\",\n\t\t\"registrarUrl\": \"http://www.markmonitor.com\",\n\t\t\"updatedDate\": \"2015-06-12T10:38:52-0700\",\n\t\t\"creationDate\": \"1997-09-15T00:00:00-0700\",\n\t\t\"registrarRegistrationExpirationDate\": \"2020-09-13T21:00:00-0700\",\n\t\t\"registrar\": \"MarkMonitor, Inc.\",\n\t\t\"registrarIanaId\": \"292\",\n\t\t\"registrarAbuseContactEmail\": \"abusecomplaints@markmonitor.com\",\n\t\t\"registrarAbuseContactPhone\": \"+1.2083895740\",\n\t\t\"domainStatus\": \"clientUpdateProhibited (https://www.icann.org/epp#clientUpdateProhibited) clientTransferProhibited (https://www.icann.org/epp#clientTransferProhibited) clientDeleteProhibited (https://www.icann.org/epp#clientDeleteProhibited) serverUpdateProhibited (https://www.icann.org/epp#serverUpdateProhibited) serverTransferProhibited (https://www.icann.org/epp#serverTransferProhibited) serverDeleteProhibited (https://www.icann.org/epp#serverDeleteProhibited)\",\n\t\t\"registrantName\": \"Dns Admin\",\n\t\t\"registrantOrganization\": \"Google Inc.\",\n\t\t\"registrantStreet\": \"Please contact contact-admin@google.com, 1600 Amphitheatre Parkway\",\n\t\t\"registrantCity\": \"Mountain View\",\n\t\t\"registrantStateProvince\": \"CA\",\n\t\t\"registrantPostalCode\": \"94043\",\n\t\t\"registrantCountry\": \"US\",\n\t\t\"registrantPhone\": \"+1.6502530000\",\n\t\t\"registrantFax\": \"+1.6506188571\",\n\t\t\"registrantEmail\": \"dns-admin@google.com\",\n\t\t\"adminName\": \"DNS Admin\",\n\t\t\"adminOrganization\": \"Google Inc.\",\n\t\t\"adminStreet\": \"1600 Amphitheatre Parkway\",\n\t\t\"adminCity\": \"Mountain View\",\n\t\t\"adminStateProvince\": \"CA\",\n\t\t\"adminPostalCode\": \"94043\",\n\t\t\"adminCountry\": \"US\",\n\t\t\"adminPhone\": \"+1.6506234000\",\n\t\t\"adminFax\": \"+1.6506188571\",\n\t\t\"adminEmail\": \"dns-admin@google.com\",\n\t\t\"techName\": \"DNS Admin\",\n\t\t\"techOrganization\": \"Google Inc.\",\n\t\t\"techStreet\": \"2400 E. Bayshore Pkwy\",\n\t\t\"techCity\": \"Mountain View\",\n\t\t\"techStateProvince\": \"CA\",\n\t\t\"techPostalCode\": \"94043\",\n\t\t\"techCountry\": \"US\",\n\t\t\"techPhone\": \"+1.6503300100\",\n\t\t\"techFax\": \"+1.6506181499\",\n\t\t\"techEmail\": \"dns-admin@google.com\",\n\t\t\"nameServer\": \"ns4.google.com ns2.google.com ns1.google.com ns3.google.com\",\n\t\t\"dnssec\": \"unsigned\",\n\t\t\"urlOfTheIcannWhoisDataProblemReportingSystem\": \"http://wdprs.internic.net/\",\n\t\t\"lastUpdateOfWhoisDatabase\": \"2017-02-22T03:53:14-0800 <<<\"\n\t};\n\nTo pass options to the underlying `node-whois` module, use:\n\n\tvar whois = require('./index.js');\n\n\twhois('google.com', {follow: 3, verbose: true}, function(err, result){\n\t\tconsole.log(JSON.stringify(result, null, 2))\n\t})\n\n# Send pull requests\n\nIssues are cool, but PRs are better. Don't break the tests.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mikemaccana/whois-json.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.2.2"
}
